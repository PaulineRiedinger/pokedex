let currentPokemon = 1; // Stocke l'ID du Pok√©mon actuellement affich√©

// Fonction pour r√©cup√©rer les donn√©es d'un Pok√©mon depuis l'API
async function fetchPokemon(id) {
  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`); // R√©cup√©ration des donn√©es via l'API
  const data = await response.json(); // Conversion de la r√©ponse en JSON

  // M√†J du nom du Pok√©mon en majuscules
  document.getElementById("name").textContent = data.name.toUpperCase();

  // M√†J de l'image du Pok√©mon
  document.getElementById("sprite").src =
    data.sprites.versions["generation-v"]["black-white"].front_default;

  // M√†J de l'ID du Pok√©mon sous forme de texte
  document.getElementById("id").textContent = `#${data.id}`;
}

// Fonction pour afficher le Pok√©mon suivant
function nextPokemon() {
  if (currentPokemon < 151) {
    // V√©rifie que l'ID ne d√©passe pas 151 (limite 1√®re g√©n√©ration ü©∑)
    currentPokemon++; // Incr√©mente l'ID
    fetchPokemon(currentPokemon); // Met √† jour l'affichage avec le nouveau Pok√©mon
  }
}

// Fonction pour afficher le Pok√©mon pr√©c√©dent
function prevPokemon() {
  if (currentPokemon > 1) {
    // V√©rifie que l'ID ne descend pas en dessous de 1
    currentPokemon--; // D√©cr√©mente l'ID
    fetchPokemon(currentPokemon); // Met √† jour l'affichage avec le nouveau Pok√©mon
  }
}

fetchPokemon(currentPokemon); // Charge le premier Pok√©mon au d√©marrage
